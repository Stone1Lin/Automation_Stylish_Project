{"name": "Delete product API with invalid value.", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n +  and   400 = int('400')", "trace": "session = <requests.sessions.Session object at 0x11dc4e400>, test_data = {'Error msg': 'Product ID not found.', 'Http_status_code': '400', 'Token': 'valid', 'Unnamed: 4': 'Internal Server Error', ...}\n\n    @allure.feature(\"Admin API\")\n    @allure.story(\"Delete product failure.\")\n    @allure.title(f\"Delete product API with invalid value.\")\n    @pytest.mark.parametrize(\"test_data\", data_process.excel_read(\"API Delete Product Failed\"))\n    # @pytest.mark.AdminAPI\n    def test_delete_product_failure(session, test_data):\n        logging.info(test_data)\n    \n        if test_data['Token'] == \"valid\":\n            with allure.step(\"Login account.\"):\n                LoginAPI(session).get_login_info()\n    \n        with allure.step(\"Delete product with invalid value.\"):\n            resp = DeleteProductAPI(session).send(test_data['product_id'])\n    \n        with allure.step(\"Verify error message is expected.\"):\n            if resp.status_code == 404:\n                with allure.step(f\"Verify error message is expected if status_code: {resp.status_code}.\"):\n                    assert resp.text.strip() == test_data['Error msg']\n            else:\n                with allure.step(f\"Verify error message is expected: {test_data['Error msg']}\"):\n>                   assert resp.status_code == int(test_data['Http_status_code'])\nE                   AssertionError: assert 500 == 400\nE                    +  where 500 = <Response [500]>.status_code\nE                    +  and   400 = int('400')\n\ntest_api/test_api_admin.py:103: AssertionError"}, "steps": [{"name": "Login account.", "status": "passed", "start": 1677719864821, "stop": 1677719865231}, {"name": "Delete product with invalid value.", "status": "passed", "start": 1677719865231, "stop": 1677719865395}, {"name": "Verify error message is expected.", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n +  and   400 = int('400')\n", "trace": "  File \"/Users/linstone/Desktop/AppWork/Automation-Test-Program-Batch1/Stylish_Project/test_api/test_api_admin.py\", line 103, in test_delete_product_failure\n    assert resp.status_code == int(test_data['Http_status_code'])\n"}, "steps": [{"name": "Verify error message is expected: Product ID not found.", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n +  and   400 = int('400')\n", "trace": "  File \"/Users/linstone/Desktop/AppWork/Automation-Test-Program-Batch1/Stylish_Project/test_api/test_api_admin.py\", line 103, in test_delete_product_failure\n    assert resp.status_code == int(test_data['Http_status_code'])\n"}, "start": 1677719865395, "stop": 1677719865396}], "start": 1677719865395, "stop": 1677719865413}], "attachments": [{"name": "log", "source": "a0444699-1c02-4691-b1f0-ba2c289c351b-attachment.txt", "type": "text/plain"}], "start": 1677719864821, "stop": 1677719865413, "uuid": "69e84a78-17ac-4107-8cf1-35949b1d5b8b", "historyId": "150eae7553b0701cce99b63398861da1", "testCaseId": "0a460f7fffc4088f4455b2cc5d642026", "fullName": "test_api.test_api_admin#test_delete_product_failure", "labels": [{"name": "story", "value": "Delete product failure."}, {"name": "feature", "value": "Admin API"}, {"name": "parentSuite", "value": "test_api"}, {"name": "suite", "value": "test_api_admin"}, {"name": "host", "value": "Lins-MBP.GoMore-3F"}, {"name": "thread", "value": "42545-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api.test_api_admin"}]}