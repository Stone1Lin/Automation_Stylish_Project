{
  "uid" : "c32621c5580e3d76",
  "name" : "Get accessories category fail with invalid paging.",
  "fullName" : "test_api.test_product#test_product_category_failure",
  "historyId" : "31d2d4e28ed42b020382744b918ab195",
  "time" : {
    "start" : 1677720255336,
    "stop" : 1677720255680,
    "duration" : 344
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n +  and   400 = int('400')",
  "statusTrace" : "session = <requests.sessions.Session object at 0x11d992550>, test_data = {'Description': 'Get accessories category fail with invalid paging.', 'Http_status_code': '400', 'Method': 'GET', 'Unnamed: 6': 'Internal Server Error', ...}\n\n    @allure.feature(\"Product API\")\n    @allure.story(\"Search product by category failure.\")\n    @allure.title(\"Category API response by params within invalid value.\")\n    @pytest.mark.parametrize(\"test_data\", data_process.excel_read('API Category with invalid value'))\n    @pytest.mark.ProductAPI\n    def test_product_category_failure(session, test_data):\n        allure.dynamic.title(test_data['Description'])\n    \n        with allure.step(f\"Search by product category -> category: {test_data['category']}\"):\n            resp = Prod_CategoryAPI(session).send(test_data)\n>           assert resp.status_code == int(test_data['Http_status_code'])\nE           AssertionError: assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\nE            +  and   400 = int('400')\n\ntest_api/test_product.py:160: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_verify_url",
    "time" : {
      "start" : 1677719747951,
      "stop" : 1677719747951,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1677719747951,
      "stop" : 1677719747951,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1677720253199,
      "stop" : 1677720255334,
      "duration" : 2135
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1677719747951,
      "stop" : 1677719747951,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "delete_output_dir",
    "time" : {
      "start" : 1677719747951,
      "stop" : 1677719747951,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "session",
    "time" : {
      "start" : 1677720255335,
      "stop" : 1677720255335,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n +  and   400 = int('400')",
    "statusTrace" : "session = <requests.sessions.Session object at 0x11d992550>, test_data = {'Description': 'Get accessories category fail with invalid paging.', 'Http_status_code': '400', 'Method': 'GET', 'Unnamed: 6': 'Internal Server Error', ...}\n\n    @allure.feature(\"Product API\")\n    @allure.story(\"Search product by category failure.\")\n    @allure.title(\"Category API response by params within invalid value.\")\n    @pytest.mark.parametrize(\"test_data\", data_process.excel_read('API Category with invalid value'))\n    @pytest.mark.ProductAPI\n    def test_product_category_failure(session, test_data):\n        allure.dynamic.title(test_data['Description'])\n    \n        with allure.step(f\"Search by product category -> category: {test_data['category']}\"):\n            resp = Prod_CategoryAPI(session).send(test_data)\n>           assert resp.status_code == int(test_data['Http_status_code'])\nE           AssertionError: assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\nE            +  and   400 = int('400')\n\ntest_api/test_product.py:160: AssertionError",
    "steps" : [ {
      "name" : "Search by product category -> category: women",
      "time" : {
        "start" : 1677720255337,
        "stop" : 1677720255679,
        "duration" : 342
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n +  and   400 = int('400')\n",
      "statusTrace" : "  File \"/Users/linstone/Desktop/AppWork/Automation-Test-Program-Batch1/Stylish_Project/test_api/test_product.py\", line 160, in test_product_category_failure\n    assert resp.status_code == int(test_data['Http_status_code'])\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "670fb3c351079439",
      "name" : "log",
      "source" : "670fb3c351079439.txt",
      "type" : "text/plain",
      "size" : 293
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1677720255692,
      "stop" : 1677720255755,
      "duration" : 63
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "session::0",
    "time" : {
      "start" : 1677720255691,
      "stop" : 1677720255691,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Search product by category failure."
  }, {
    "name" : "feature",
    "value" : "Product API"
  }, {
    "name" : "tag",
    "value" : "ProductAPI"
  }, {
    "name" : "parentSuite",
    "value" : "test_api"
  }, {
    "name" : "suite",
    "value" : "test_product"
  }, {
    "name" : "host",
    "value" : "Lins-MBP.GoMore-3F"
  }, {
    "name" : "thread",
    "value" : "42545-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_api.test_product"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "ProductAPI" ]
  },
  "source" : "c32621c5580e3d76.json",
  "parameterValues" : [ ]
}