{
  "uid" : "c238b20e4348ad4c",
  "name" : "Search product with paging is over than 6.",
  "fullName" : "test_api.test_product#test_product_search_failure",
  "historyId" : "ab6aec9f4ad1ebf46767829dc846b283",
  "time" : {
    "start" : 1677720095743,
    "stop" : 1677720096056,
    "duration" : 313
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Expected: 400, Actual: 500\nassert 500 == 400\n +  where 500 = <Response [500]>.status_code\n +  and   400 = int('400')",
  "statusTrace" : "session = <requests.sessions.Session object at 0x11d968100>, test_data = {'Description': 'Search product with paging is over than 6.', 'Http_status_code': '400', 'Method': 'GET', 'Unnamed: 6': 'Internal Server Error', ...}\n\n    @allure.feature(\"Product API\")\n    @allure.story(\"Search product by keyword failure.\")\n    @allure.title(\"Search product with invalid value and verify error message.\")\n    @pytest.mark.parametrize(\"test_data\", data_process.excel_read('API Search with invalid value'))\n    @pytest.mark.ProductAPI\n    def test_product_search_failure(session, test_data):\n        allure.dynamic.title(test_data['Description'])\n    \n        with allure.step(f\"Search product -> keyword: {test_data['keyword']}, paging: {test_data['paging']}\"):\n            resp = Prod_SearchAPI(session).send(test_data)\n    \n        with allure.step(f\"Verify http_status_code is equal to {int(test_data['Http_status_code'])}.\"):\n>           assert resp.status_code == int(test_data['Http_status_code']), \\\n                f\"Expected: {int(test_data['Http_status_code'])}, Actual: {resp.status_code}\"\nE           AssertionError: Expected: 400, Actual: 500\nE           assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\nE            +  and   400 = int('400')\n\ntest_api/test_product.py:66: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "session",
    "time" : {
      "start" : 1677720095741,
      "stop" : 1677720095741,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1677719747951,
      "stop" : 1677719747951,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1677719747951,
      "stop" : 1677719747951,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1677720093470,
      "stop" : 1677720095741,
      "duration" : 2271
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1677719747951,
      "stop" : 1677719747951,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "delete_output_dir",
    "time" : {
      "start" : 1677719747951,
      "stop" : 1677719747951,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Expected: 400, Actual: 500\nassert 500 == 400\n +  where 500 = <Response [500]>.status_code\n +  and   400 = int('400')",
    "statusTrace" : "session = <requests.sessions.Session object at 0x11d968100>, test_data = {'Description': 'Search product with paging is over than 6.', 'Http_status_code': '400', 'Method': 'GET', 'Unnamed: 6': 'Internal Server Error', ...}\n\n    @allure.feature(\"Product API\")\n    @allure.story(\"Search product by keyword failure.\")\n    @allure.title(\"Search product with invalid value and verify error message.\")\n    @pytest.mark.parametrize(\"test_data\", data_process.excel_read('API Search with invalid value'))\n    @pytest.mark.ProductAPI\n    def test_product_search_failure(session, test_data):\n        allure.dynamic.title(test_data['Description'])\n    \n        with allure.step(f\"Search product -> keyword: {test_data['keyword']}, paging: {test_data['paging']}\"):\n            resp = Prod_SearchAPI(session).send(test_data)\n    \n        with allure.step(f\"Verify http_status_code is equal to {int(test_data['Http_status_code'])}.\"):\n>           assert resp.status_code == int(test_data['Http_status_code']), \\\n                f\"Expected: {int(test_data['Http_status_code'])}, Actual: {resp.status_code}\"\nE           AssertionError: Expected: 400, Actual: 500\nE           assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\nE            +  and   400 = int('400')\n\ntest_api/test_product.py:66: AssertionError",
    "steps" : [ {
      "name" : "Search product -> keyword: 經典, paging: 9999999999999999999",
      "time" : {
        "start" : 1677720095743,
        "stop" : 1677720096055,
        "duration" : 312
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Verify http_status_code is equal to 400.",
      "time" : {
        "start" : 1677720096055,
        "stop" : 1677720096056,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Expected: 400, Actual: 500\nassert 500 == 400\n +  where 500 = <Response [500]>.status_code\n +  and   400 = int('400')\n",
      "statusTrace" : "  File \"/Users/linstone/Desktop/AppWork/Automation-Test-Program-Batch1/Stylish_Project/test_api/test_product.py\", line 66, in test_product_search_failure\n    assert resp.status_code == int(test_data['Http_status_code']), \\\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "9837e4606575651c",
      "name" : "log",
      "source" : "9837e4606575651c.txt",
      "type" : "text/plain",
      "size" : 293
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "session::0",
    "time" : {
      "start" : 1677720096065,
      "stop" : 1677720096065,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "driver::0",
    "time" : {
      "start" : 1677720096066,
      "stop" : 1677720096130,
      "duration" : 64
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Product API"
  }, {
    "name" : "story",
    "value" : "Search product by keyword failure."
  }, {
    "name" : "tag",
    "value" : "ProductAPI"
  }, {
    "name" : "parentSuite",
    "value" : "test_api"
  }, {
    "name" : "suite",
    "value" : "test_product"
  }, {
    "name" : "host",
    "value" : "Lins-MBP.GoMore-3F"
  }, {
    "name" : "thread",
    "value" : "42545-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_api.test_product"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "ProductAPI" ]
  },
  "source" : "c238b20e4348ad4c.json",
  "parameterValues" : [ ]
}